include "src/test/resources/functions.txt";

double[2;2] matrix = [
                        [0.2, 0.5],
                        [1.1, 9*1 - (2*3)]
                     ];

kvadrirajMatricu(&matrix);

int k = 0;
int l = 0;

print "Matrica:";

int[2] size = matrixLength(matrix);

while( k < size[0] ){
    l = 0;
    while( l < size[1] ){
        print matrix[k, l];
        l = l + 1;
    }
    print " ";
    k = k + 1;
}


print "evo i dio matrice:";
print matrix[0];

int[5] array = [1, 2, 3, 4, 5.0];

 l=0;
 while( l < arrayLength(array)){
    print array[l];
    l = l + 1;
 }

            loop(int i = 0; i < 10; i = i + 1){
                 Point startPt = Point(0,0,0);
                 Point endPt = moveTo(startPoint, 20, 10);
                 Line line = Line(startPt, endPt);  getEndpoint(line);
                 ...
















 #trajectory(id: "Line"){
     #segments(thickness:"2.0", color : "255, 255, 0, 0"){

                #segment(id: "segment1", entity : lin1, alignTo : lin2, ...){
                    #style(visible : true, color : red, )
                    #velocityProfile(function: velocityRobo1(x, y, z), ...);
                    #transformation() {
                        #rotate(rotationVector:"x, y, z", angle:30.0);
                    }
                    if(uvjet){
                        #toolMovingCurve(function: sin(xt), ...);
                    } else {
                        #toolMovingCurve(function: cos(xt), ...);
                    }
                }
                #segment(id: "segment2", entity : lin1, alignTo : lin2, ...){
                }
                #segment(id: "segment3", entity : lin1, alignTo : lin2, ...){
                }
           }
    }
 }

 #path(trajId: "Line"){
     #repeat(numOfTimes: 3) {
        #execute(segment1);
        #repeat(numOfTimes: 2){
            #execute(segment2);
            #execute(segment3);
        }
     }

     }
 }

 //-----------------------------------

 int x = 0;
 loop( x < 10 ){
     print x;
     x = x + 1;
 }

 print "---------------";

 loop(int k = 0; k < 10; k = k + 1 ){
     print k;
 }

 print "---------------";

 do {
   print x;
   x = x - 1;
 } loop ( x > 0 );

 print "---------------";